<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */





use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_preprocess_HOOK() for page templates.
 *
 * 
 *
 * 
 */

function miramar_preprocess_page(&$variables) {
	extract($variables);
	if(!empty($variables['node']))
	{
		$node = $variables['node'];

		// Sets up custom hero images for display on Program or home page
		
		switch($node->getType()) {
			case"program": {
				$image = $node->field_program_hero_image;			// Extract field value from content
				if(!$image->isEmpty()) {					// Is there data?
					$imageUri = $image->entity->getFileUri();		// Build URL to image
					$pgmHero = file_create_url($imageUri);			//	for Twig display
					$variables['hero'] = $pgmHero;				// Load URL into a Twig variable
					$variables['pgmtitle'] = $node->get('title')->value;	// Load page title into a Twig variable
				}
				break;
			}
			case "home_page": {
				$nids = \Drupal::entityQuery('node')->
					condition('type','homepage_hero')->execute();		// Get Homepage Hero content type
				$targetNodes =  \Drupal\node\Entity\Node::loadMultiple($nids);	// Now, load the nodes
				foreach($targetNodes as $targetNode) {				// Loop through content types
					$image = $targetNode->field_image;			// Get field value
					if(!$image->isEmpty()) {				// Same as lines 68 - 72
						$imageUri = $image->entity->getFileUri();	//	except
						$homeHero = file_create_url($imageUri);		//	with
						$variables['home_hero'][] = $homeHero;		// 	an array
					}
				}
				break;
			}
			default: {								// Possible future garbage collector
			}
		}

	}
}



/**
 * Implements hook_preprocess_HOOK() for block templates.
 *
 * @todo This is just a poor man's implementation of changing svg logo to png.
 *
 * @see https://www.drupal.org/node/2472127#comment-10458517
 */
function miramar_preprocess_block(&$variables) {
  if (isset($variables['base_plugin_id'])) {
    switch ($variables['base_plugin_id']) {
      case 'system_branding_block':
        $variables['site_logo'] = '';
        if ($variables['content']['site_logo']['#access'] && isset($variables['content']['site_logo']['#uri'])) {
          $variables['content']['site_logo']['#uri'] = $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
        }
        break;

    }
  }
}


function miramar_theme_suggestions_page_alter(&$suggestions, &$vars) {
  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical' && $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term')) {
    $term = Term::load($tid);
    $suggestions[] = 'page__taxonomy__' . $term->getVocabularyId();
  }
	if ($node = \Drupal::routeMatch()->getParameter('node')) {
	    $content_type = $node->bundle();
	    $suggestions[] = 'page__'.$content_type;
  }
}


