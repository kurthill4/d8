<?php

/**
 * @file
 * Main module file for Miramar College.
 * Contains functions that alter Drupal setting and behaviors
 */

/**
 * Implements hook_preprocess_page()
 * 
 */
function miramarcustom_preprocess_page(&$variables) {

	// Set path to theme images

	$imagepath = base_path() . drupal_get_path('theme', 'miramar');

	\Drupal::configFactory()
		->getEditable('miramarcustom.settings')
		->set('image_path', $imagepath)
		->save();

	// Get client IP and determine if it's from on campus

	if (!empty($_SERVER["HTTP_CLIENT_IP"]))
	{
	 //check for ip from share internet
	 $theIP = $_SERVER["HTTP_CLIENT_IP"];
	}
	elseif (!empty($_SERVER["HTTP_X_FORWARDED_FOR"]))
	{
	 // Check for the Proxy User
	 $theIP = $_SERVER["HTTP_X_FORWARDED_FOR"];
	}
	else
	{
	 $theIP = $_SERVER["REMOTE_ADDR"];
	}

	if(substr($theIP,0,2) == '10') {
		\Drupal::configFactory()
			->getEditable('miramarcustom.settings')
			->set('local_ip', TRUE)
			->save();
	}
	else {
		\Drupal::configFactory()
			->getEditable('miramarcustom.settings')
			->set('local_ip', FALSE)
			->save();
	}

	\Drupal::configFactory()
		->getEditable('miramarcustom.settings')
		->set('client_ip', $theIP)
		->save();

	\Drupal::configFactory()
		->getEditable('miramarcustom.settings')
		->set('issues_link', '<a href="http://webissues.ics.sdmiramar.net/issue/report?url=' . $_SERVER['REQUEST_URI'] . '">Report Issues With This Page</a>')
		->save();

/*    $node = $variables['node'];

      $type = $node->getType();
      switch($type) {
		case "program":
			\Drupal::configFactory()
				->getEditable('miramarcustom.settings')
				->set('prog_call', '<div class="spacer" style="height:0.1em">&nbsp;</div><div class="call hide-xs"><a href="#course_seq"><span><i class="fa fa-chevron-right" aria-hidden="true"></i></span>What to Take</a></div>')
				->save();
		break;
		default:
			\Drupal::configFactory()
				->getEditable('miramarcustom.settings')
				->set('prog_call', '')
				->save();
      }*/

}

/**
 * Implements hook_preprocess_page()
 * Reformats event dates for display using correct time zone.
 */

function miramarcustom_preprocess_node(&$variables) {
	if(!empty($variables['node']))
	{
		$node = $variables['node'];

		switch($node->getType()) {
			case "event":
			case "committee_meeting":
				$realTimezone = new DateTimeZone('America/Los_Angeles');
				$gmtTimezone = new DateTimeZone('GMT');
				$localDateTime = new DateTime($node->field_event_date->value, $gmtTimezone);
				$offset = $realTimezone->getOffset($localDateTime);
				$localInterval = DateInterval::createFromDateString((string)$offset . 'seconds');
				$localDateTime->add($localInterval);
				$result = $localDateTime->format('l, F j');
				$variables['newdate'] = $result;
				break;
			case "sdccd_campaign":
			break;
		case "program":
			\Drupal::configFactory()
				->getEditable('miramarcustom.settings')
				->set('prog_call', '<div class="spacer" style="height:0.1em">&nbsp;</div><div class="call hide-xs"><a href="#course_seq"><span><i class="fa fa-chevron-right" aria-hidden="true"></i></span>What to Take</a></div>')
				->save();
		break;
		case "custom_web_page":
			\Drupal::configFactory()
				->getEditable('miramarcustom.settings')
				->set('prog_call', '')
				->save();
		break;
		default:
		}
	}
}
/*
function miramarcustom_views_pre_render(\Drupal\views\ViewExecutable $view) {
  if ($view->id() == "committee_meetings" && $view->current_display == 'block_2') {
	$item = $variables['row'];
	$node = node_load($item->nid);
	$variables['committee'] = $node->field_committee->target_id;
  }
}
*/
/*
function miramarcustom_views_pre_render(\Drupal\views\ViewExecutable $view) {
$variables['committee'] = 'bar';
	if ($view->name == "committee_meetings" && $view->current_display == 'block_2') {
drupal_set_message("FOO");
		$foo = 0;
		foreach($view->result as $key => $item) {
			$bar = $item->field_field_nid_1[0]['raw']['value'];
//			$bar = $item->_field_data['nid']['entity']->field_field_nid_1['und'][0]['alt'];
			$variables['committee'] = $bar;
			$foo++;
			if($foo > 0)
				break;
		}
	}
}*/





